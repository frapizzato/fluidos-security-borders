Namespace Consumer:
payments (offloaded)
products (offloaded)
users

Pod Consumer:
app-payment-1,app-payment-2 (Payments)
mobile-products,desktop-products (Products)

Namespace Provider:
handle-payments
monitoring


Pod Provider:
bank-1,bank-2,bank-3 (Handle-Payments)
resource-monitor (Monitoring)


Comandi Consumer:

kubectl create serviceaccount costum-controller -n fluidos
kubectl apply -f ControllerServiceAccount/

kubectl create namespace payments
kubectl create namespace products
kubectl create namespace users
kubectl label namespace payments name=payments
kubectl label namespace products name=products
kubectl label namespace users name=users
liqoctl offload namespace payments --pod-offloading-strategy Remote
liqoctl offload namespace products --pod-offloading-strategy Remote
kubectl apply -f Final_demo/config_map/Esempio_configMap.yaml
kubectl apply -f Final_demo/Deployments/consumer/


//ricordarsi di settare il flavour per vedere il verifier






Comandi Provider:
kubectl create namespace handle-payments
kubectl create namespace monitoring
kubectl label namespace handle-payments name=handle-payments
kubectl label namespace monitoring name=monitoring

kubectl apply -f Final_demo/Deployments/provider/

kubectl apply -f esempi_demo_harmo/esempio_contratto_con_nome_CMap.yaml
kubectl apply -f esempi_demo_harmo/Esempio_configMap.yaml

kubectl create serviceaccount costum-controller -n fluidos
kubectl apply -f ControllerServiceAccount/


Test to add:
liqoctl offload namespace demo --pod-offloading-strategy Remote
kubectl apply -f ../../deployments/node/samples/nginx-deployment.yaml -n demo
